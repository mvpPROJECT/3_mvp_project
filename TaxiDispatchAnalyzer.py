# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e65SQRkWuJQkosSfkgq4H-r84VdgCm7P
"""

import pandas as pd
import json
#미배차
non_vi_dict = dict()
non_vi_cnt_dict = dict()
causes = dict()

# 문자열을 JSON으로 변환하는 함수
def str_to_json(data_str):
    # 작은따옴표를 큰따옴표로 변환하여 JSON 파싱이 가능하도록 함
    data_str = data_str.replace("'", "\"")
    # JSON 문자열을 파이썬 객체로 변환
    data = json.loads(data_str)
    return data

#dispatched data에서 did로 df추출하는 함수
def dispatched_did(did):
  # driver_id 항목이 did 인 df 추출
  canceled_call = 0
  filtered_df = df_dispatched[df_dispatched['driver_id'] == did]
  time_table = [0 for _ in range(24)]
  cnt = len(filtered_df)
  date_list = []
  for i in range(len(filtered_df)): #did인 df에 대하여,
    #print("호출번호",i ,"\n",df.iloc[i]['created'],"~",df.iloc[i]['canceled'])
    if not pd.isna(filtered_df.iloc[i]['canceled_by']):
        cause = filtered_df.iloc[i]['canceled_by']
        if cause not in causes.keys():
          causes[cause] = 1
        else:
          causes[cause] += 1
        canceled_call += 1
    start = filtered_df.iloc[i]['created'].split()
    start_date = start[0].split('-')
    start_time = start[1].split(':')
    start_time[2] = start_time[2].split('.')[0]
    #print(start_date) #[0] 년 [1]월 [2]일
    #print(start_time)#[0] 시 [1]분 [2]초
    #end = filtered_df.iloc[i]['do_time'].split()
    #end_date = end[0].split('-')
    #end_time = end[1].split(':')
    #end_time[2] = end_time[2].split('.')[0]
    temp = int(start_time[0])
    time_table[temp] +=1
    date = (start_date[0][2:],start_date[1],start_date[2])
    date_time_table = dict()
    if date not in date_time_table.keys():
      date_time_table[date] = [0 for _ in range(24)]
      date_time_table[date][temp] +=1

    else:
      date_time_table[date][temp] +=1

    for k,v in date_time_table.items():
      d_date_time_table = dict()
      for i in range(24):
        if v[i] == 0:
          continue
        #print(k,i,v[i])
        d_date_time_table[i] = v[i]
        date_list.append((k,d_date_time_table))

  d_time_table = dict()
  for i in range(24):
    if time_table[i] == 0:
      continue
    d_time_table[i] = time_table[i]

  data = {
    "patched_call": cnt-canceled_call,
    "canceled_call": canceled_call,
    "dispatched_time_table": d_time_table,
    "dispatched_date_list": date_list
  }

  return data

#차량번호 -> nondispatch+dispatched 데이터 추출하는 함수
def nondispatch_regNo(reg_No):
  i_list = []

  for i in range(len(df)):
    #print(i)
    reg_numbers = []
    data_str = df['drivers'][i]
    drivers = str_to_json(data_str)
    did_flag = False
    for driver_list in drivers:#1,2,3회차 호출을 받은 차량들
      for driver in driver_list: #n회차 호출을 받은 각각의 차량 모두에 대해
        try:
          reg_numbers.append(driver['regNo']) #종료시 리스트에는 호출받은 차량번호들이 들어간다.
          #print(driver['regNo'])
          #print(driver['did'])
          if reg_No == driver['regNo']:
            #print(driver['regNo'])
            if not did_flag:
              did = driver['did']
              did_flag = True
        except:
          pass
    if reg_No in reg_numbers:
      i_list.append(i)
    #print(reg_numbers)

  time_table = [0 for _ in range(24)]
  date_list = []
  date_time_table = dict()
  for i in i_list:
    #print("호출번호",i ,"\n",df.iloc[i]['created'],"~",df.iloc[i]['canceled'])
    start = df.iloc[i]['created'].split()
    start_date = start[0].split('-')
    start_time = start[1].split(':')
    start_time[2] = start_time[2].split('.')[0]
    #print(start_date) #[0] 년 [1]월 [2]일
    #print(start_time)#[0] 시 [1]분 [2]초
    end = df.iloc[0]['canceled'].split()
    end_date = end[0].split('-')
    end_time = end[1].split(':')
    end_time[2] = end_time[2].split('.')[0]
    temp = int(start_time[0])
    time_table[temp] +=1
    date = (start_date[0][2:],start_date[1],start_date[2])
    #print(date,temp)
    if date not in date_time_table.keys():
      date_time_table[date] = [0 for _ in range(24)]
      date_time_table[date][temp] +=1
    else:
      date_time_table[date][temp] +=1
    date_list = []
    for k,v in date_time_table.items():
      d_date_time_table = dict()
      for i in range(24):
        if v[i] == 0:
          continue
        #print(k,i,v[i])
        d_date_time_table[i] = v[i]
        date_list.append((k,d_date_time_table))
  #print(date_list)

  #print(date_time_table)
  vtype =  df.iloc[i_list[0]]['vehicle_type']
  if vtype not in non_vi_dict.keys():
    non_vi_dict[vtype] = len(i_list)
    non_vi_cnt_dict[vtype] = 1
  else:
    non_vi_dict[vtype] += len(i_list)
    non_vi_cnt_dict[vtype] += 1

  d_time_table = dict()
  for i in range(24):
    if time_table[i] == 0:
      continue
    d_time_table[i] = time_table[i]

  data = {
    "missed_call": len(i_list),
    "nondispatched_time_table": d_time_table,
    "date_list": date_list
  }

  #배차데이터 가져오기
  dispatched_data = dispatched_did(did)

  merged_data = {
      "VehicleNumber": reg_No,
      "car_type": df.iloc[i_list[0]]['vehicle_type'],
      "driver_id": did,
      "nondispatched": data,
      "dispatched": dispatched_data
  }
  return merged_data
  # JSON 파일로 저장하기

def find_vn_list(df):
  vn_list = []
  for i in range(len(df)):
    #print(i)
    data_str = df['drivers'][i]
    drivers = str_to_json(data_str)
    did_flag = False
    for driver_list in drivers:#1,2,3회차 호출을 받은 차량들
      for driver in driver_list: #n회차 호출을 받은 각각의 차량 모두에 대해
        try:
          vn_list.append(driver['regNo']) #종료시 리스트에는 호출받은 차량번호들이 들어간다.
        except:
          pass
  vn_list = list(set(vn_list))
  #print(vn_list)
  return vn_list

def tojson(data):
    with open('/content/drive/MyDrive/data3.json', 'w', encoding='utf-8') as json_file:
      json.dump(data, json_file, ensure_ascii=False, indent=4)

#파일패쓰변경
file_path='/content/drive/MyDrive/[벤처스타트업 아카데미 C팀]/nonDispatched_240701_240731.csv'
k = 100
#k개 파씽사용
df = pd.read_csv(file_path, nrows=k)
#원본사용
#df = pd.read_csv(file_path)

#파일패쓰2 dispatched
file_path_dispatched='/content/drive/MyDrive/[벤처스타트업 아카데미 C팀]/Dispatched_240701_240731_v2.csv'
k_dispatched = 100
#k개 파씽사용
df_dispatched = pd.read_csv(file_path_dispatched, nrows=k_dispatched)

#원본사용
#df_dispatched = pd.read_csv(file_path_dispatched)
#저장용코드
#save_file_path = f'/content/drive/MyDrive/[벤처스타트업 아카데미 C팀]/{k}.csv'
#df.to_csv(save_file_path,index=False,encoding='utf-8-sig')
#print("파일이 저장되었습니다.")

#reg_No = 'ສກ3446'
nondispatch_data_list = []
#nondispatch_data_list.append(nondispatch_regNo(reg_No))

vn_list = find_vn_list(df)
#vn_list = ['ສກ3597', 'ສກ3609', 'ສກ3611', 'ສກ3625', 'ສກ3551']
for VN in vn_list: #모든 차량 번호판에 대해
  nondispatch_data_list.append(nondispatch_regNo(VN)) #데이터추출후
tojson(nondispatch_data_list) #json변환